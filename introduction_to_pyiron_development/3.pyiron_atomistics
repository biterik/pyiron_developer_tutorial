## Loading Cloned Pyiron on the Cluster
While this step is not needed for the task of this tutorial, it is essential for actual development.
Now when you log into the cluster and open a notebook on your web browser, the very first step you do is: 
```python
from pyiron import Project
```
which basically loads all pyiron modules, now you want to load ONLY pyiron atomistics that you just cloned (because you are going to change it) while keeping all other modules untouched but still loaded.

- if you have a look at the .bashrc file in your home directory, all modules are automatically loaded with the line: ```module load pyiron/dev```. So everything you write after that will overwrite this command.

- There are several ways to load the cloned pyiron_atomistics, the easiest is you go into the cloned directory print out (```pwd``` in your terminal), and copy the path to that directory (in my case it is: /u/aabdelkawy/cloned_pyiron/pyiron_atomistics/) and then add (use vim or emacs) the following line to the end (change the path according to your user name) of the .bashrc file in your home directory. 
```
export PYTHONPATH=/u/aabdelkawy/cloned_pyiron/pyiron_atomistics:$PYTHONPATH
```
- You then save the file and run the following command in the terminal:
```bash
source .bashrc
```
- This step is needed if you also want to test any modifications you introduced into the code directly from jupyter notebook.
- You can make sure that this cloned pyiron_atomististics is indeed loaded by typing the following commands in an empty cell in one of your notebooks
```python
import pyiron_atomistics
print(pyiron_atomistics)
```
- The output should be the path to the directory where you cloned pyiron_atomistics
